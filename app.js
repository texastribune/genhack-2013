// Generated by CoffeeScript 1.4.0
(function() {
  var $canvas, Game, Round, g, images, main, rounds;

  rounds = [
    {
      tiles: ['http://i.imgur.com/nESJfEd.jpg', 'http://i.imgur.com/iDtOWVT.jpg', 'http://i.imgur.com/TdevWHU.jpg', 'http://i.imgur.com/THM96Y6.jpg'],
      correct: [0, 1],
      success: 'Texas Roads Paved With Taxes, Tolls and Debt',
      url: 'http://www.texastribune.org/2013/04/08/texas-roads-paved-taxes-tolls-and-debt/'
    }, {
      tiles: ['http://s3.amazonaws.com/static.texastribune.org/media/images/2013/03/19/Norwood-2_jpg_312x1000_q100.jpg', 'http://i.imgur.com/jg0tmZd.jpg', 'http://i.imgur.com/BENr5Mr.jpg', 'http://i.imgur.com/eTPA2BJ.jpg'],
      correct: [0, 1],
      success: 'After Decades, DNA Testing and a Conviction',
      url: 'http://www.texastribune.org/2012/10/05/video-michael-morton-marks-his-release-anniversary/'
    }, {
      tiles: ['http://i.imgur.com/aelgr6R.jpg', 'http://s3.amazonaws.com/static.texastribune.org/media/images/Powerlines_1_jpg_312x1000_q100.jpg', 'http://i.imgur.com/ZY8wKC9.jpg', 'http://i.imgur.com/bsGjIbo.jpg'],
      correct: [0, 1],
      success: 'House Passes PUC Sunset Bill',
      url: 'http://www.texastribune.org/2013/03/20/texas-house-proposes-changes-puc/'
    }
  ];

  images = {
    transportation: ['http://i.imgur.com/vpPRiE4.jpg', 'http://i.imgur.com/6lAA3y4.jpg', 'http://i.imgur.com/nESJfEd.jpg', 'http://i.imgur.com/gmDSH3P.jpg', 'http://i.imgur.com/iDtOWVT.jpg', 'http://i.imgur.com/ZY8wKC9.jpg', 'http://i.imgur.com/BENr5Mr.jpg'],
    laworder: ['http://i.imgur.com/FxTa4c6.jpg', 'http://i.imgur.com/IreOao5.jpg', 'http://i.imgur.com/jg0tmZd.jpg', 'http://i.imgur.com/aAjkvlD.jpg', 'http://i.imgur.com/TdevWHU.jpg', 'http://i.imgur.com/YhBYxzN.jpg', 'http://i.imgur.com/6kIqk5I.jpg'],
    energy: ['http://i.imgur.com/qSCgJnn.jpg', 'http://i.imgur.com/PDgqO6i.jpg', 'http://i.imgur.com/aelgr6R.jpg', 'http://i.imgur.com/THM96Y6.jpg', 'http://i.imgur.com/eTPA2BJ.jpg', 'http://i.imgur.com/snlfYEN.jpg', 'http://i.imgur.com/zok5BGz.jpg', 'http://i.imgur.com/TwKkZUA.jpg', 'http://i.imgur.com/BI8SxFt.jpg', 'http://i.imgur.com/r5O6pgu.jpg'],
    education: ['http://i.imgur.com/a13roPQ.jpg', 'http://i.imgur.com/J8XhlhB.jpg', 'http://i.imgur.com/c1teQK6.jpg', 'http://i.imgur.com/Vvq5CpM.jpg', 'http://i.imgur.com/SuK8NCn.jpg', 'http://i.imgur.com/NNlKkl3.jpg', 'http://i.imgur.com/Y4SUmS9.jpg', 'http://i.imgur.com/wNpFlxN.jpg', 'http://i.imgur.com/bsGjIbo.jpg', 'http://i.imgur.com/2POhxaq.jpg', 'http://i.imgur.com/C8qXlju.jpg', 'http://i.imgur.com/1PToaUN.jpg', 'http://i.imgur.com/jZ3xqXg.jpg', 'http://i.imgur.com/9nVwW7O.jpg', 'http://i.imgur.com/0qoxm0d.jpg'],
    healthcare: ['http://i.imgur.com/NXUp5vu.jpg', 'http://i.imgur.com/ZCMthAF.jpg', 'http://i.imgur.com/Bs30IFX.jpg', 'http://i.imgur.com/fxZDwYh.jpg']
  };

  Game = (function() {

    function Game() {
      this.rounds = [];
      this.idx = -1;
    }

    Game.prototype.addRound = function(round) {
      round.game = this;
      return this.rounds.push(round);
    };

    Game.prototype.next = function() {
      var self;
      self = this;
      this.idx = (this.idx + 1) % this.rounds.length;
      $canvas.empty().attr('class', '');
      this.currentRound = this.rounds[this.idx];
      this.currentRound.display();
      return $canvas.find('.tile').on('mousedown.game', function() {
        return self.down = this;
      }).on('mouseup.game', function(e) {
        if (this === self.down) {
          return;
        }
        $(this).addClass('active');
        $(self.down).addClass('active');
        self.down = void 0;
        return self.check(e);
      });
    };

    Game.prototype.check = function(e) {
      var $active, $correct, $tiles, apos0, apos1, apos2, apos3, free, lookup, self;
      self = this;
      $tiles = $canvas.find('.tile');
      $correct = $tiles.filter('.correct');
      $active = $tiles.filter('.active');
      if ($active.length === 0) {
        return;
      }
      if ($active.length > this.currentRound.correct.length) {
        $active.removeClass('active');
        return;
      }
      if ($correct.length === $active.length) {
        $tiles.off('.game').not('.correct').addClass('end');
        apos0 = $correct.filter('.pos-0').length;
        apos1 = $correct.filter('.pos-1').length;
        apos2 = $correct.filter('.pos-2').length;
        apos3 = $correct.filter('.pos-3').length;
        lookup = "" + apos0 + apos1 + apos2 + apos3;
        free = [2, 3];
        if (apos2) {
          free.shift();
        }
        if (apos3) {
          free.pop();
        }
        switch (lookup) {
          case "1100":
            $correct.addClass('shiftS');
            break;
          case "1010":
            $correct.filter('.pos-0').addClass('shiftSE');
            break;
          case "1001":
            $correct.filter('.pos-0').addClass('shiftS');
            break;
          case "0110":
            $correct.filter('.pos-1').addClass('shiftS');
            break;
          case "0101":
            $correct.filter('.pos-1').addClass('shiftSW');
        }
        if ($correct.not('.active').length === 0) {
          $canvas.addClass('correct');
          this.showSuccess();
        } else {
          this.showFailure();
        }
        e.stopPropagation();
        $(document).one('click', function() {
          self.next();
        });
      }
    };

    Game.prototype.showSuccess = function() {
      var $el;
      $el = $("<div class='indicator success start'><i class='icon-star'></i></div").appendTo($canvas);
      setTimeout(function() {
        return $el.removeClass('start');
      }, 100);
      return this.showMsg();
    };

    Game.prototype.showFailure = function() {
      var $el;
      $el = $("<div class='indicator failure start'><i class='icon-bolt'></i></div").appendTo($canvas);
      setTimeout(function() {
        return $el.removeClass('start');
      }, 100);
      return this.showMsg();
    };

    Game.prototype.showMsg = function() {
      var content, msg, url;
      msg = this.currentRound.success;
      url = this.currentRound.url;
      content = "<div class='notice'>      <a href='" + url + "' rel='nofollow' target='_blank'>" + msg + "</a>      <a href='" + url + "' rel='nofollow' target='_blank' class='permalink'><i class='icon-share-alt'></i> full story</a>      </div>    ";
      return $(content).appendTo($canvas).on('click', function(e) {
        return e.stopPropagation();
      });
    };

    return Game;

  })();

  Round = (function() {

    function Round(data) {
      this.tiles = data.tiles;
      this.correct = data.correct;
      this.success = data.success;
      this.url = data.url;
    }

    Round.prototype.click = function(e) {
      var $elem;
      $elem = $(this);
      $elem.toggleClass('active');
      return g.check(e);
    };

    Round.prototype.display = function() {
      var $tile, idx, tile, _i, _len, _ref;
      _ref = this.tiles;
      for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
        tile = _ref[idx];
        $tile = $("<div class='tile'><img src='" + tile + "'></div>");
        $tile.find('img')[0].draggable = false;
        if (this.correct.indexOf(idx) !== -1) {
          $tile.addClass('correct');
        }
        $tile.on('click.game', this.click);
        if (Math.random() > 0.5) {
          $tile.appendTo($canvas);
        } else {
          $tile.prependTo($canvas);
        }
      }
      $canvas.find('.tile').each(function(idx) {
        return $(this).addClass("start pos-" + idx);
      });
      return setTimeout(function() {
        $canvas.find('.tile').removeClass('start');
      }, 1);
    };

    return Round;

  })();

  $canvas = $('#canvas');

  g = null;

  main = function() {
    var r, round, _i, _len;
    g = new Game();
    for (_i = 0, _len = rounds.length; _i < _len; _i++) {
      round = rounds[_i];
      r = new Round(round);
      g.addRound(r);
    }
    return g.next();
  };

  $(main);

}).call(this);
